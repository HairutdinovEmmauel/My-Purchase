{"ast":null,"code":"const initialState = {\n  fructs: [],\n  loading: false,\n  error: false,\n  cartElements: [],\n  orderTotal: 35\n};\n\nconst updateCartElement = (bookId, state, action) => {\n  const {\n    bookList: {\n      books\n    },\n    shoppingCart: {\n      cartItems\n    }\n  } = state;\n  const book = books.find(book => book.id === bookId);\n  const itemIndex = cartItems.findIndex(({\n    id\n  }) => id === bookId);\n  const item = cartItems[itemIndex];\n\n  const itemDefault = (book, item = {}) => {\n    const {\n      id = book.id,\n      title = book.title,\n      count = 0,\n      total = 0\n    } = item;\n    return {\n      id,\n      title,\n      count,\n      total\n    };\n  };\n\n  const {\n    id,\n    title,\n    count,\n    total\n  } = itemDefault(book, item);\n\n  if (action == 'DECREASE_BOOK_COUNT') {\n    return {\n      newItem: {\n        id: book.id,\n        title: book.title,\n        count: count - 1,\n        total: total - book.price\n      },\n      itemIndex\n    };\n  } else if (action == 'BOOK_ADDED_TO_CART' || 'INCREASE_BOOK_COUNT') {\n    return {\n      newItem: {\n        id,\n        title,\n        count: count + 1,\n        total: total + book.price\n      },\n      itemIndex\n    };\n  }\n\n  ;\n};\n\nconst reducers = (state = initialState, action) => {\n  switch (action.type) {\n    case 'FETCH_FRUCTS_REQUREST':\n      return { ...state,\n        fructs: [],\n        loading: true,\n        error: null\n      };\n\n    case 'FETCH_FRUCTS_SUCCESS':\n      return { ...state,\n        fructs: action.payload,\n        loading: false,\n        error: null\n      };\n\n    case 'FETCH_FRUCTS_FAILURE':\n      return { ...state,\n        fructs: [],\n        loading: false,\n        error: action.payload\n      };\n\n    case 'FRUCT_ADDED_TO_CART':\n      // console.log(cartElements);\n      return { ...state,\n        cartElements: addCartElement(fructs, cartElements, action.payload)\n      };\n\n    default:\n      return state;\n  }\n\n  ;\n};\n\nexport default reducers;","map":{"version":3,"sources":["C:/Users/HP/Desktop/Projects/weathe-forecast/src/reducers/reducers.js"],"names":["initialState","fructs","loading","error","cartElements","orderTotal","updateCartElement","bookId","state","action","bookList","books","shoppingCart","cartItems","book","find","id","itemIndex","findIndex","item","itemDefault","title","count","total","newItem","price","reducers","type","payload","addCartElement"],"mappings":"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","sourcesContent":["const initialState = {\r\n    fructs: [],\r\n    loading: false,\r\n    error: false,\r\n    cartElements: [],\r\n    orderTotal: 35\r\n};\r\n\r\nconst updateCartElement = (bookId, state, action) => {\r\n\r\n    const { bookList: { books }, shoppingCart: { cartItems, } } = state;\r\n\r\n    const book = books.find((book) => book.id === bookId);\r\n    const itemIndex = cartItems.findIndex(({id}) => id === bookId);\r\n    const item = cartItems[itemIndex];\r\n\r\n    const itemDefault = (book, item = {}) => {\r\n        const {\r\n            id = book.id,\r\n            title = book.title,\r\n            count = 0,\r\n            total = 0 } = item;\r\n\r\n        return {\r\n            id,\r\n            title,\r\n            count,\r\n            total\r\n        };\r\n    }\r\n\r\n    const {\r\n        id,\r\n        title,\r\n        count,\r\n        total} = itemDefault(book, item);\r\n\r\n    if(action == 'DECREASE_BOOK_COUNT') {\r\n        return {\r\n            newItem: {\r\n                id: book.id,\r\n                title: book.title,\r\n                count: count - 1,\r\n                total: total - book.price\r\n            },\r\n            itemIndex\r\n        }\r\n        \r\n    }else if(action == 'BOOK_ADDED_TO_CART' || 'INCREASE_BOOK_COUNT') {\r\n        return {\r\n            newItem: {\r\n                id,\r\n                title,\r\n                count: count + 1,\r\n                total: total + book.price    \r\n            },\r\n            itemIndex\r\n        }\r\n    };\r\n};\r\n\r\nconst reducers = (state = initialState, action) => {\r\n\r\n\r\n    switch(action.type) {\r\n        case 'FETCH_FRUCTS_REQUREST': \r\n            return {\r\n                ...state,\r\n                fructs: [],\r\n                loading: true,\r\n                error: null\r\n            };\r\n        case 'FETCH_FRUCTS_SUCCESS': \r\n            return {\r\n                ...state,\r\n                fructs: action.payload,\r\n                loading: false,\r\n                error: null\r\n            };\r\n        case 'FETCH_FRUCTS_FAILURE': \r\n            return {\r\n                ...state,\r\n                fructs: [],\r\n                loading: false,\r\n                error: action.payload\r\n            };\r\n        case 'FRUCT_ADDED_TO_CART': \r\n\r\n            // console.log(cartElements);\r\n\r\n            return {\r\n                ...state,\r\n                cartElements: addCartElement(fructs, cartElements, action.payload)\r\n            }\r\n            \r\n        default: \r\n            return state;\r\n    };\r\n};\r\n\r\nexport default reducers;"]},"metadata":{},"sourceType":"module"}