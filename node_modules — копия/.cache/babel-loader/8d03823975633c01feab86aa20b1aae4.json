{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\HP\\\\Desktop\\\\Projects\\\\weathe-forecast\\\\src\\\\component\\\\fruct-list\\\\fruct-list.js\";\nimport React, { Component } from 'react';\nimport { compose } from 'redux';\nimport { connect } from 'react-redux';\nimport { withFructstoreService } from '../hoc';\nimport Spinner from '../spinner';\n\nconst FructList = ({\n  fructs,\n  onAddToCart\n}) => {\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 9\n    }\n  });\n};\n\nclass FructListContainer extends Component {\n  componentDidMount() {\n    this.props.fetchFructs();\n  }\n\n  render() {\n    const {\n      fructs,\n      loading,\n      error,\n      onAddToCart\n    } = this.props;\n\n    if (loading) {\n      /*#__PURE__*/\n      React.createElement(Spinner, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 13\n        }\n      });\n    }\n\n    if (error) {}\n\n    console.log(this.props);\n    return /*#__PURE__*/React.createElement(FructList, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 16\n      }\n    });\n  }\n\n}\n\n;\n\nconst mapStateToProps = ({\n  fructs,\n  loading,\n  error\n}) => {\n  return {\n    fructs,\n    loading,\n    error\n  };\n};\n\nconst mapDispatchToProps = (dispatch, ownProps) => {\n  return {\n    fetchFructs: () => {\n      const {\n        fructstoreService\n      } = ownProps;\n      dispatch(fructsRequresd());\n      fructstoreService.getFructs().then(data => {\n        dispatch(fructsLoaded(data));\n      }).catch(err => dispatch(fructsError(err)));\n    },\n    onAddToCart: id => dispatch(onAddToCart(id))\n  };\n};\n\nexport default compose(withFructstoreService(), connect(mapStateToProps, mapDispatchToProps))(FructListContainer);","map":{"version":3,"sources":["C:/Users/HP/Desktop/Projects/weathe-forecast/src/component/fruct-list/fruct-list.js"],"names":["React","Component","compose","connect","withFructstoreService","Spinner","FructList","fructs","onAddToCart","FructListContainer","componentDidMount","props","fetchFructs","render","loading","error","console","log","mapStateToProps","mapDispatchToProps","dispatch","ownProps","fructstoreService","fructsRequresd","getFructs","then","data","fructsLoaded","catch","err","fructsError","id"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,OAAxB;AACA,SAASC,OAAT,QAAwB,aAAxB;AAEA,SAASC,qBAAT,QAAsC,QAAtC;AACA,OAAOC,OAAP,MAAoB,YAApB;;AAEA,MAAMC,SAAS,GAAG,CAAC;AAAEC,EAAAA,MAAF;AAAUC,EAAAA;AAAV,CAAD,KAA6B;AAC3C,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ;AAGH,CAJD;;AAMA,MAAMC,kBAAN,SAAiCR,SAAjC,CAA0C;AAEtCS,EAAAA,iBAAiB,GAAG;AAChB,SAAKC,KAAL,CAAWC,WAAX;AACH;;AAEDC,EAAAA,MAAM,GAAG;AAEL,UAAM;AAAEN,MAAAA,MAAF;AAAUO,MAAAA,OAAV;AAAmBC,MAAAA,KAAnB;AAA0BP,MAAAA;AAA1B,QAA0C,KAAKG,KAArD;;AAEA,QAAGG,OAAH,EAAY;AACR;AAAA,0BAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACH;;AACD,QAAGC,KAAH,EAAU,CAET;;AAEDC,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKN,KAAjB;AAEA,wBAAO,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACH;;AApBqC;;AAqBzC;;AAED,MAAMO,eAAe,GAAG,CAAC;AAAEX,EAAAA,MAAF;AAAUO,EAAAA,OAAV;AAAmBC,EAAAA;AAAnB,CAAD,KAA+B;AACnD,SAAO;AAAER,IAAAA,MAAF;AAAUO,IAAAA,OAAV;AAAmBC,IAAAA;AAAnB,GAAP;AACH,CAFD;;AAIA,MAAMI,kBAAkB,GAAG,CAACC,QAAD,EAAWC,QAAX,KAAwB;AAC/C,SAAO;AACHT,IAAAA,WAAW,EAAE,MAAM;AACf,YAAM;AAAEU,QAAAA;AAAF,UAAwBD,QAA9B;AAEAD,MAAAA,QAAQ,CAACG,cAAc,EAAf,CAAR;AAEAD,MAAAA,iBAAiB,CAACE,SAAlB,GACKC,IADL,CACWC,IAAD,IAAU;AACZN,QAAAA,QAAQ,CAACO,YAAY,CAACD,IAAD,CAAb,CAAR;AACH,OAHL,EAIKE,KAJL,CAIYC,GAAD,IAAST,QAAQ,CAACU,WAAW,CAACD,GAAD,CAAZ,CAJ5B;AAKH,KAXE;AAYHrB,IAAAA,WAAW,EAAGuB,EAAD,IAAQX,QAAQ,CAACZ,WAAW,CAACuB,EAAD,CAAZ;AAZ1B,GAAP;AAcH,CAfD;;AAiBA,eAAe7B,OAAO,CAClBE,qBAAqB,EADH,EAElBD,OAAO,CAACe,eAAD,EAAkBC,kBAAlB,CAFW,CAAP,CAGTV,kBAHS,CAAf","sourcesContent":["import React, { Component } from 'react';\r\nimport { compose } from 'redux';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { withFructstoreService } from '../hoc'\r\nimport Spinner from '../spinner';\r\n\r\nconst FructList = ({ fructs, onAddToCart }) => {\r\n    return (\r\n        <div></div>\r\n    );\r\n};\r\n\r\nclass FructListContainer extends Component{\r\n\r\n    componentDidMount() {\r\n        this.props.fetchFructs();\r\n    }\r\n\r\n    render() {\r\n\r\n        const { fructs, loading, error, onAddToCart } = this.props\r\n\r\n        if(loading) {\r\n            <Spinner />\r\n        }\r\n        if(error) {\r\n            \r\n        }\r\n\r\n        console.log(this.props);\r\n\r\n        return <FructList />\r\n    }\r\n};\r\n\r\nconst mapStateToProps = ({ fructs, loading, error}) => {\r\n    return { fructs, loading, error };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch, ownProps) => {\r\n    return {\r\n        fetchFructs: () => {\r\n            const { fructstoreService } = ownProps;\r\n\r\n            dispatch(fructsRequresd());\r\n\r\n            fructstoreService.getFructs()\r\n                .then((data) => {\r\n                    dispatch(fructsLoaded(data))\r\n                })\r\n                .catch((err) => dispatch(fructsError(err)));\r\n        },\r\n        onAddToCart: (id) => dispatch(onAddToCart(id)) \r\n    }\r\n}\r\n\r\nexport default compose(\r\n    withFructstoreService(),\r\n    connect(mapStateToProps, mapDispatchToProps)\r\n    )(FructListContainer);"]},"metadata":{},"sourceType":"module"}