{"ast":null,"code":"const initialState = {\n  fructs: [],\n  loading: false,\n  error: false,\n  cartElements: [],\n  orderTotal: 35\n};\n\nconst updateCartElements = (cartElements, {\n  newElement,\n  elementIndex\n}) => {\n  if (newElement.count === 0) {\n    return [...cartElements.slice(0, elementIndex), ...cartElements.slice(elementIndex + 1)];\n  }\n\n  if (elementIndex === -1) {\n    return [...cartElements, newElement];\n  }\n\n  ;\n  return [...cartElements.slice(0, elementIndex), newElement, ...cartElements.slice(elementIndex + 1)];\n};\n\nconst updateCartElement = (elementId, state, action) => {\n  const {\n    fructs,\n    cartElements\n  } = state;\n  const fruct = fructs.find(fruct => fruct.id === elementId);\n  const elementIndex = cartElements.findIndex(({\n    id\n  }) => id === elementId);\n  const element = cartElements[elementIndex];\n  const {\n    id,\n    title,\n    discount\n  } = fruct;\n\n  if (action === 'DECREASE_FRUCT_COUNT') {\n    if (fruct.discount === true && element.count === 3) {\n      return {\n        newElement: {\n          id,\n          title,\n          discount,\n          count: element.count - 1,\n          total: 20\n        },\n        elementIndex\n      };\n    } else {\n      return {\n        newElement: {\n          id,\n          title,\n          discount,\n          count: element.count - 1,\n          total: element.total - fruct.price\n        },\n        elementIndex\n      };\n    }\n  }\n\n  if (action === 'FRUCT_ADDED_TO_CART' || 'INCREASE_FRUCT_COUNT') {\n    if (elementIndex === -1) {\n      return {\n        newElement: {\n          id,\n          title,\n          discount,\n          count: 1,\n          total: fruct.price\n        },\n        elementIndex\n      };\n    } else if (fruct.discount === true && element.count === 2) {\n      return {\n        newElement: {\n          id,\n          title,\n          discount,\n          count: element.count + 1,\n          total: 25\n        },\n        elementIndex\n      };\n    } else if (fruct.discount === true && element.count > 2) {\n      return {\n        newElement: {\n          id,\n          title,\n          discount,\n          count: element.count + 1,\n          total: element.total + 8\n        },\n        elementIndex\n      };\n    } else {\n      return {\n        newElement: {\n          id,\n          title,\n          discount,\n          count: element.count + 1,\n          total: element.total + fruct.price\n        },\n        elementIndex\n      };\n    }\n  }\n};\n\nconst updateOrderTotal = cartElements => {\n  const result = cartElements.map(({\n    total\n  }) => total);\n  console.log(result);\n};\n\nconst reducers = (state = initialState, action) => {\n  console.log(action.type);\n\n  switch (action.type) {\n    case 'FETCH_FRUCTS_REQUREST':\n      return { ...state,\n        fructs: [],\n        loading: true,\n        error: null\n      };\n\n    case 'FETCH_FRUCTS_SUCCESS':\n      return { ...state,\n        fructs: action.payload,\n        loading: false,\n        error: null\n      };\n\n    case 'FETCH_FRUCTS_FAILURE':\n      return { ...state,\n        fructs: [],\n        loading: false,\n        error: action.payload\n      };\n\n    case 'FRUCT_ADDED_TO_CART':\n      // console.log(state.cartElements)\n      return { ...state,\n        cartElements: updateCartElements(state.cartElements, updateCartElement(action.payload, state, action.type)),\n        orderTotal: updateOrderTotal(state.cartElements)\n      };\n\n    case 'DECREASE_FRUCT_COUNT':\n      console.log(state.cartElements);\n      return { ...state,\n        cartElements: updateCartElements(state.cartElements, updateCartElement(action.payload, state, action.type)),\n        orderTotal: updateOrderTotal(state.cartElements)\n      };\n\n    case 'INCREASE_FRUCT_COUNT':\n      console.log(state.cartElements);\n      return { ...state,\n        cartElements: updateCartElements(state.cartElements, updateCartElement(action.payload, state, action.type)),\n        orderTotal: updateOrderTotal(state.cartElements)\n      };\n\n    case 'DELETE_FRUCT':\n      const {\n        cartElements\n      } = state;\n      const id = cartElements.findIndex(({\n        id\n      }) => id === action.payload);\n      return { ...state,\n        cartElements: [...cartElements.slice(0, id), ...cartElements.slice(id + 1)]\n      };\n\n    default:\n      return state;\n  }\n\n  ;\n};\n\nexport default reducers;","map":{"version":3,"sources":["C:/Users/HP/Desktop/Projects/weathe-forecast/src/reducers/reducers.js"],"names":["initialState","fructs","loading","error","cartElements","orderTotal","updateCartElements","newElement","elementIndex","count","slice","updateCartElement","elementId","state","action","fruct","find","id","findIndex","element","title","discount","total","price","updateOrderTotal","result","map","console","log","reducers","type","payload"],"mappings":"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","sourcesContent":["const initialState = {\r\n    fructs: [],\r\n    loading: false,\r\n    error: false,\r\n    cartElements: [],\r\n    orderTotal: 35\r\n};\r\n\r\nconst updateCartElements = (cartElements, { newElement, elementIndex }) => {\r\n\r\n    if(newElement.count === 0) {\r\n        return [\r\n            ...cartElements.slice(0, elementIndex),\r\n            ...cartElements.slice(elementIndex + 1 )\r\n        ];\r\n    }\r\n    \r\n    if (elementIndex === -1) {\r\n        return [\r\n            ...cartElements,\r\n            newElement\r\n        ];\r\n    };\r\n\r\n    return [\r\n        ...cartElements.slice(0, elementIndex),\r\n        newElement,\r\n        ...cartElements.slice(elementIndex + 1 )\r\n    ];\r\n};\r\n\r\nconst updateCartElement =  (elementId, state, action) => {\r\n\r\n    const { fructs, cartElements } = state;\r\n\r\n    const fruct = fructs.find((fruct) => fruct.id === elementId);\r\n    const elementIndex = cartElements.findIndex(({id}) => id === elementId);\r\n    const element = cartElements[elementIndex];\r\n\r\n    const {\r\n        id, \r\n        title,\r\n        discount\r\n    } = fruct;\r\n\r\n\r\n    if(action === 'DECREASE_FRUCT_COUNT') {\r\n\r\n        if(fruct.discount === true && element.count === 3) {\r\n            return{\r\n                newElement: {\r\n                    id,\r\n                    title,\r\n                    discount,\r\n                    count: element.count - 1,\r\n                    total: 20\r\n                },\r\n                elementIndex\r\n            }\r\n        }else {\r\n            return {\r\n                newElement: {\r\n                    id,\r\n                    title,\r\n                    discount,\r\n                    count: element.count - 1,\r\n                    total: element.total - fruct.price\r\n                },\r\n                elementIndex\r\n            }\r\n        }\r\n    }\r\n\r\n    if(action === 'FRUCT_ADDED_TO_CART' || 'INCREASE_FRUCT_COUNT' ) {\r\n\r\n        if(elementIndex === -1) {\r\n            return {\r\n                newElement: {\r\n                    id,\r\n                    title,\r\n                    discount,\r\n                    count: 1,\r\n                    total: fruct.price\r\n                },\r\n                elementIndex\r\n            }\r\n        }else if(fruct.discount === true && element.count === 2) {\r\n            return{\r\n                newElement: {\r\n                    id,\r\n                    title,\r\n                    discount,\r\n                    count: element.count + 1,\r\n                    total: 25\r\n                },\r\n                elementIndex\r\n            }\r\n        }else if(fruct.discount === true && element.count > 2) {\r\n            return{\r\n                newElement: {\r\n                    id,\r\n                    title,\r\n                    discount,\r\n                    count: element.count + 1,\r\n                    total: element.total + 8\r\n                },\r\n                elementIndex\r\n            }\r\n        }else {\r\n            return {\r\n                newElement: {\r\n                    id,\r\n                    title,\r\n                    discount,\r\n                    count: element.count + 1,\r\n                    total: element.total + fruct.price\r\n                },\r\n                elementIndex\r\n            }\r\n        }\r\n        \r\n    }\r\n};\r\n\r\nconst updateOrderTotal = (cartElements) => {\r\n    const result = cartElements.map(({total}) => total);\r\n    console.log(result);\r\n};\r\n\r\nconst reducers = (state = initialState, action) => {\r\n\r\n    console.log(action.type);\r\n\r\n\r\n    switch(action.type) {\r\n        case 'FETCH_FRUCTS_REQUREST': \r\n            return {\r\n                ...state,\r\n                fructs: [],\r\n                loading: true,\r\n                error: null\r\n            };\r\n        case 'FETCH_FRUCTS_SUCCESS': \r\n            return {\r\n                ...state,\r\n                fructs: action.payload,\r\n                loading: false,\r\n                error: null\r\n            };\r\n        case 'FETCH_FRUCTS_FAILURE': \r\n            return {\r\n                ...state,\r\n                fructs: [],\r\n                loading: false,\r\n                error: action.payload\r\n            };\r\n        case 'FRUCT_ADDED_TO_CART': \r\n\r\n            // console.log(state.cartElements)\r\n\r\n            return {\r\n                ...state,\r\n                cartElements: updateCartElements( state.cartElements, updateCartElement(action.payload, state, action.type) ),\r\n                orderTotal: updateOrderTotal(state.cartElements)\r\n            }\r\n        case 'DECREASE_FRUCT_COUNT': \r\n\r\n            console.log(state.cartElements)\r\n\r\n            return {\r\n                ...state,\r\n                cartElements: updateCartElements( state.cartElements, updateCartElement(action.payload, state, action.type) ),\r\n                orderTotal: updateOrderTotal(state.cartElements)\r\n            }\r\n        case 'INCREASE_FRUCT_COUNT': \r\n\r\n            console.log(state.cartElements)\r\n\r\n            return {\r\n                ...state,\r\n                cartElements: updateCartElements( state.cartElements, updateCartElement(action.payload, state, action.type) ),\r\n                orderTotal: updateOrderTotal(state.cartElements)\r\n            }\r\n        case 'DELETE_FRUCT' :\r\n\r\n            const { cartElements } = state;\r\n\r\n            const id  = cartElements.findIndex(({ id }) => id === action.payload );\r\n\r\n            return {\r\n                ...state,\r\n                cartElements: [\r\n                    ...cartElements.slice(0, id),\r\n                    ...cartElements.slice(id + 1)\r\n                ]\r\n            };\r\n\r\n        default: \r\n            return state;\r\n    };\r\n};\r\n\r\nexport default reducers;"]},"metadata":{},"sourceType":"module"}