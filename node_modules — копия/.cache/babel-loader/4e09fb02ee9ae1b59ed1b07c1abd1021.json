{"ast":null,"code":"const initialState = {\n  fructs: [],\n  loading: false,\n  error: false,\n  cartElements: [],\n  orderTotal: 35\n};\n\nconst updateCartElements = (cartElements, {\n  newElement,\n  elementIndex\n}) => {\n  if (newElement.count == 0) {\n    return [...cartElements.slice(0, elementIndex), ...cartElements.slice(elementIndex + 1)];\n  }\n\n  if (elementIndex == -1) {\n    return [...cartElements, newElement];\n  }\n\n  ;\n  return [...cartElements.slice(0, elementIndex), newElement, ...cartElements.slice(elementIndex + 1)];\n}; // const ElementDefault = (fruct, element = {}, { discount, count, total }) => {\n//     const {\n//         id = fruct.id,\n//         title = fruct.title,\n//         discount = true,\n//         count = 3,\n//         total = 25 } = element;\n//     return {\n//         id,\n//         title,\n//         discount,\n//         count,\n//         total\n//     };\n// }\n\n\nconst isDiscountElement = (elementId, state) => {\n  const {\n    cartElements,\n    fructs\n  } = state;\n  const fruct = fructs.find(fruct => fruct.id === elementId);\n  const elementIndex = cartElements.findIndex(({\n    id\n  }) => id === elementId);\n  const element = cartElements[elementIndex];\n\n  const ElementDefault = (fruct, element = {}) => {\n    const {\n      id = fruct.id,\n      title = fruct.title,\n      discount = true,\n      count = 3,\n      total = 25\n    } = element;\n    return {\n      id,\n      title,\n      discount,\n      count,\n      total\n    };\n  };\n\n  if (elementId === -1) {\n    return ({} = ElementDefault(fruct));\n  }\n};\n\nconst updateCartElement = (elementId, state, action) => {\n  const {\n    fructs,\n    cartElements\n  } = state;\n  const fruct = fructs.find(fruct => fruct.id === elementId);\n  const elementIndex = cartElements.findIndex(({\n    id\n  }) => id === elementId);\n  const element = cartElements[elementIndex];\n  const elementdiscount = cartElements.find(({\n    discount\n  }) => discount === true);\n\n  if (cartElements.length === 0) {\n    // const { \n    //     id,\n    //     title,\n    //     discount,\n    //     count,\n    //     total\n    // } = ElementDefault(fruct, element, { discount: null, count: 0, total: 0});\n    if (action == 'FRUCT_ADDED_TO_CART') {\n      return {\n        newElement: {\n          id,\n          title,\n          discount,\n          count: count + 1,\n          total: total + 8\n        },\n        elementIndex\n      };\n    }\n  } else if (elementdiscount.discount === true && elementdiscount.count === 3) {\n    // const { \n    //     id,\n    //     title,\n    //     discount,\n    //     count,\n    //     total\n    // } = ElementDefault(fruct, element, { discount: true, count: 3, total: 25});\n    if (action == 'DECREASE_FRUCT_COUNT') {\n      return {\n        newElement: {\n          id,\n          title,\n          discount,\n          count: count - 1,\n          total: total - 8\n        },\n        elementIndex\n      };\n    }\n  } else {\n    const {\n      id,\n      title,\n      discount,\n      count,\n      total\n    } = ElementDefault(fruct, element, {\n      discount: false,\n      count: 3,\n      total: 25\n    });\n\n    if (action == 'DECREASE_FRUCT_COUNT') {\n      return {\n        newElement: {\n          id: fruct.id,\n          title: fruct.title,\n          discount,\n          count: count - 1,\n          total: total - fruct.price\n        },\n        elementIndex\n      };\n    } else if (action == 'FRUCT_ADDED_TO_CART' || 'INCREASE_FRUCT_COUNT') {\n      return {\n        newElement: {\n          id,\n          title,\n          discount,\n          count: count + 1,\n          total: total + fruct.price\n        },\n        elementIndex\n      };\n    }\n  }\n};\n\nconst updateOrderTotal = cartElements => {\n  const result = cartElements.map(({\n    total\n  }) => total);\n  console.log(result);\n};\n\nconst reducers = (state = initialState, action) => {\n  switch (action.type) {\n    case 'FETCH_FRUCTS_REQUREST':\n      return { ...state,\n        fructs: [],\n        loading: true,\n        error: null\n      };\n\n    case 'FETCH_FRUCTS_SUCCESS':\n      return { ...state,\n        fructs: action.payload,\n        loading: false,\n        error: null\n      };\n\n    case 'FETCH_FRUCTS_FAILURE':\n      return { ...state,\n        fructs: [],\n        loading: false,\n        error: action.payload\n      };\n\n    case 'FRUCT_ADDED_TO_CART':\n      console.log(state.cartElements);\n      return { ...state,\n        cartElements: updateCartElements(state.cartElements, updateCartElement(action.payload, state, action.type, isDiscountElement(action.payload, state))),\n        orderTotal: updateOrderTotal(state.cartElements)\n      };\n\n    case 'DECREASE_FRUCT_COUNT':\n      console.log(state.cartElements);\n      return { ...state,\n        cartElements: updateCartElements(state.cartElements, updateCartElement(action.payload, state, action.type))\n      };\n\n    case 'INCREASE_FRUCT_COUNT':\n      console.log(state.cartElements);\n      return { ...state,\n        cartElements: updateCartElements(state.cartElements, updateCartElement(action.payload, state, action.type))\n      };\n\n    case 'DELETE_FRUCT':\n      const {\n        cartElements\n      } = state;\n      const id = cartElements.findIndex(({\n        id\n      }) => id === action.payload);\n      return { ...state,\n        cartElements: [...cartElements.slice(0, id), ...cartElements.slice(id + 1)]\n      };\n\n    default:\n      return state;\n  }\n\n  ;\n};\n\nexport default reducers;","map":{"version":3,"sources":["C:/Users/HP/Desktop/Projects/weathe-forecast/src/reducers/reducers.js"],"names":["initialState","fructs","loading","error","cartElements","orderTotal","updateCartElements","newElement","elementIndex","count","slice","isDiscountElement","elementId","state","fruct","find","id","findIndex","element","ElementDefault","title","discount","total","updateCartElement","action","elementdiscount","length","price","updateOrderTotal","result","map","console","log","reducers","type","payload"],"mappings":"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","sourcesContent":["const initialState = {\r\n    fructs: [],\r\n    loading: false,\r\n    error: false,\r\n    cartElements: [],\r\n    orderTotal: 35\r\n};\r\n\r\nconst updateCartElements = (cartElements, { newElement, elementIndex }) => {\r\n\r\n    if(newElement.count == 0) {\r\n        return [\r\n            ...cartElements.slice(0, elementIndex),\r\n            ...cartElements.slice(elementIndex + 1 )\r\n        ];\r\n    }\r\n    \r\n    if (elementIndex == -1) {\r\n        return [\r\n            ...cartElements,\r\n            newElement\r\n        ];\r\n    };\r\n\r\n    return [\r\n        ...cartElements.slice(0, elementIndex),\r\n        newElement,\r\n        ...cartElements.slice(elementIndex + 1 )\r\n    ];\r\n};\r\n\r\n// const ElementDefault = (fruct, element = {}, { discount, count, total }) => {\r\n//     const {\r\n//         id = fruct.id,\r\n//         title = fruct.title,\r\n//         discount = true,\r\n//         count = 3,\r\n//         total = 25 } = element;\r\n\r\n//     return {\r\n//         id,\r\n//         title,\r\n//         discount,\r\n//         count,\r\n//         total\r\n//     };\r\n// }\r\n\r\nconst isDiscountElement = (elementId, state) => {\r\n    const { cartElements, fructs } = state;\r\n\r\n    const fruct = fructs.find((fruct) => fruct.id === elementId);\r\n    const elementIndex = cartElements.findIndex(({id}) => id === elementId);\r\n    const element = cartElements[elementIndex];\r\n\r\n    const ElementDefault = (fruct, element = {} ) => {\r\n        const {\r\n            id = fruct.id,\r\n            title = fruct.title,\r\n            discount = true,\r\n            count = 3,\r\n            total = 25 } = element;\r\n\r\n        return {\r\n            id,\r\n            title,\r\n            discount,\r\n            count,\r\n            total\r\n        };\r\n\r\n    }\r\n\r\n    if(elementId === -1) {\r\n        return {\r\n\r\n        } = ElementDefault(fruct)\r\n    }\r\n\r\n}\r\n\r\nconst updateCartElement =  (elementId, state, action) => {\r\n\r\n    const { fructs, cartElements} = state;\r\n\r\n    const fruct = fructs.find((fruct) => fruct.id === elementId);\r\n    const elementIndex = cartElements.findIndex(({id}) => id === elementId);\r\n    const element = cartElements[elementIndex];\r\n    const elementdiscount = cartElements.find(({discount}) => discount === true );\r\n\r\n\r\n    if(cartElements.length === 0) {\r\n\r\n        // const { \r\n        //     id,\r\n        //     title,\r\n        //     discount,\r\n        //     count,\r\n        //     total\r\n        // } = ElementDefault(fruct, element, { discount: null, count: 0, total: 0});\r\n\r\n        if(action == 'FRUCT_ADDED_TO_CART') {\r\n            return {\r\n                newElement: {\r\n                    id,\r\n                    title,\r\n                    discount,\r\n                    count: count + 1,\r\n                    total: total + 8   \r\n                },\r\n                elementIndex\r\n            }\r\n        }\r\n    }else if(elementdiscount.discount === true && elementdiscount.count === 3) {\r\n        // const { \r\n        //     id,\r\n        //     title,\r\n        //     discount,\r\n        //     count,\r\n        //     total\r\n        // } = ElementDefault(fruct, element, { discount: true, count: 3, total: 25});\r\n\r\n        if(action == 'DECREASE_FRUCT_COUNT') {\r\n            return {\r\n                newElement: {\r\n                    id,\r\n                    title,\r\n                    discount,\r\n                    count: count - 1,\r\n                    total: total - 8\r\n                },\r\n                elementIndex\r\n            }\r\n            \r\n        }\r\n    }else {\r\n        const { \r\n            id,\r\n            title,\r\n            discount,\r\n            count,\r\n            total\r\n        } = ElementDefault(fruct, element, { discount: false, count: 3, total: 25});\r\n\r\n        if(action == 'DECREASE_FRUCT_COUNT') {\r\n            return {\r\n                newElement: {\r\n                    id: fruct.id,\r\n                    title: fruct.title,\r\n                    discount,\r\n                    count: count - 1,\r\n                    total: total - fruct.price\r\n                },\r\n                elementIndex\r\n            }\r\n            \r\n        }else if(action == 'FRUCT_ADDED_TO_CART' || 'INCREASE_FRUCT_COUNT') {\r\n            return {\r\n                newElement: {\r\n                    id,\r\n                    title,\r\n                    discount,\r\n                    count: count + 1,\r\n                    total: total + fruct.price    \r\n                },\r\n                elementIndex\r\n            }\r\n        }\r\n    }\r\n};\r\n\r\nconst updateOrderTotal = (cartElements) => {\r\n    const result = cartElements.map(({total}) => total);\r\n    console.log(result);\r\n};\r\n\r\nconst reducers = (state = initialState, action) => {\r\n\r\n\r\n    switch(action.type) {\r\n        case 'FETCH_FRUCTS_REQUREST': \r\n            return {\r\n                ...state,\r\n                fructs: [],\r\n                loading: true,\r\n                error: null\r\n            };\r\n        case 'FETCH_FRUCTS_SUCCESS': \r\n            return {\r\n                ...state,\r\n                fructs: action.payload,\r\n                loading: false,\r\n                error: null\r\n            };\r\n        case 'FETCH_FRUCTS_FAILURE': \r\n            return {\r\n                ...state,\r\n                fructs: [],\r\n                loading: false,\r\n                error: action.payload\r\n            };\r\n        case 'FRUCT_ADDED_TO_CART': \r\n\r\n            console.log(state.cartElements)\r\n\r\n            return {\r\n                ...state,\r\n                cartElements: updateCartElements( state.cartElements, updateCartElement(action.payload, state, action.type, isDiscountElement(action.payload, state)) ),\r\n                orderTotal: updateOrderTotal(state.cartElements)\r\n            }\r\n        case 'DECREASE_FRUCT_COUNT': \r\n\r\n            console.log(state.cartElements)\r\n\r\n            return {\r\n                ...state,\r\n                cartElements: updateCartElements( state.cartElements, updateCartElement(action.payload, state, action.type) )\r\n            }\r\n        case 'INCREASE_FRUCT_COUNT': \r\n\r\n            console.log(state.cartElements)\r\n\r\n            return {\r\n                ...state,\r\n                cartElements: updateCartElements( state.cartElements, updateCartElement(action.payload, state, action.type) )\r\n            }\r\n        case 'DELETE_FRUCT' :\r\n\r\n            const { cartElements } = state;\r\n\r\n            const id  = cartElements.findIndex(({ id }) => id === action.payload );\r\n\r\n            return {\r\n                ... state,\r\n                cartElements: [\r\n                    ...cartElements.slice(0, id),\r\n                    ...cartElements.slice(id + 1)\r\n                ]\r\n            };\r\n\r\n        default: \r\n            return state;\r\n    };\r\n};\r\n\r\nexport default reducers;"]},"metadata":{},"sourceType":"module"}