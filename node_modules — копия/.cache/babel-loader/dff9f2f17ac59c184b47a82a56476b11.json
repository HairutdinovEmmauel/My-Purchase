{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\HP\\\\Desktop\\\\Projects\\\\weathe-forecast\\\\src\\\\component\\\\fruct-list\\\\fruct-list.js\";\nimport React, { Component } from 'react';\nimport { compose } from 'redux';\nimport { connect } from 'react-redux';\nimport { withFructstoreService } from '../hoc';\nimport Spinner from '../spinner';\nimport ErrorIndicator from '../error-indicator';\nimport { fructsRequresd, fructsLoaded, fructsError, onAddToCart } from '../actions';\n\nconst FructList = ({\n  onAddToCart\n}) => {\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 9\n    }\n  });\n};\n\nclass FructListContainer extends Component {\n  componentDidMount() {\n    this.props.fetchFructs();\n  }\n\n  render() {\n    const {\n      fructs,\n      loading,\n      error,\n      onAddToCart\n    } = this.props;\n\n    if (loading) {\n      return /*#__PURE__*/React.createElement(Spinner, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 20\n        }\n      });\n    }\n\n    if (error) {\n      return /*#__PURE__*/React.createElement(ErrorIndicator, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 20\n        }\n      });\n    }\n\n    console.log(this.props);\n    return /*#__PURE__*/React.createElement(FructList, {\n      fructs: fructs,\n      on: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 16\n      }\n    });\n  }\n\n}\n\n;\n\nconst mapStateToProps = ({\n  fructs,\n  loading,\n  error\n}) => {\n  return {\n    fructs,\n    loading,\n    error\n  };\n};\n\nconst mapDispatchToProps = (dispatch, ownProps) => {\n  return {\n    fetchFructs: () => {\n      const {\n        fructstoreService\n      } = ownProps;\n      dispatch(fructsRequresd());\n      fructstoreService.getFructs().then(data => {\n        dispatch(fructsLoaded(data));\n      }).catch(err => dispatch(fructsError(err)));\n    },\n    onAddToCart: id => dispatch(onAddToCart(id))\n  };\n};\n\nexport default compose(withFructstoreService(), connect(mapStateToProps, mapDispatchToProps))(FructListContainer);","map":{"version":3,"sources":["C:/Users/HP/Desktop/Projects/weathe-forecast/src/component/fruct-list/fruct-list.js"],"names":["React","Component","compose","connect","withFructstoreService","Spinner","ErrorIndicator","fructsRequresd","fructsLoaded","fructsError","onAddToCart","FructList","FructListContainer","componentDidMount","props","fetchFructs","render","fructs","loading","error","console","log","mapStateToProps","mapDispatchToProps","dispatch","ownProps","fructstoreService","getFructs","then","data","catch","err","id"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,OAAxB;AACA,SAASC,OAAT,QAAwB,aAAxB;AAEA,SAASC,qBAAT,QAAsC,QAAtC;AACA,OAAOC,OAAP,MAAoB,YAApB;AACA,OAAOC,cAAP,MAA2B,oBAA3B;AAEA,SACIC,cADJ,EAEIC,YAFJ,EAGIC,WAHJ,EAIIC,WAJJ,QAKO,YALP;;AAOA,MAAMC,SAAS,GAAG,CAAC;AAAED,EAAAA;AAAF,CAAD,KAAqB;AACnC,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ;AAGH,CAJD;;AAMA,MAAME,kBAAN,SAAiCX,SAAjC,CAA0C;AAEtCY,EAAAA,iBAAiB,GAAG;AAChB,SAAKC,KAAL,CAAWC,WAAX;AACH;;AAEDC,EAAAA,MAAM,GAAG;AAEL,UAAM;AAAEC,MAAAA,MAAF;AAAUC,MAAAA,OAAV;AAAmBC,MAAAA,KAAnB;AAA0BT,MAAAA;AAA1B,QAA0C,KAAKI,KAArD;;AAEA,QAAGI,OAAH,EAAY;AACR,0BAAO,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AACH;;AACD,QAAGC,KAAH,EAAU;AACN,0BAAO,oBAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AACH;;AAEDC,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKP,KAAjB;AAEA,wBAAO,oBAAC,SAAD;AAAW,MAAA,MAAM,EAAEG,MAAnB;AAA2B,MAAA,EAAE,MAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACH;;AApBqC;;AAqBzC;;AAED,MAAMK,eAAe,GAAG,CAAC;AAAEL,EAAAA,MAAF;AAAUC,EAAAA,OAAV;AAAmBC,EAAAA;AAAnB,CAAD,KAA+B;AACnD,SAAO;AAAEF,IAAAA,MAAF;AAAUC,IAAAA,OAAV;AAAmBC,IAAAA;AAAnB,GAAP;AACH,CAFD;;AAIA,MAAMI,kBAAkB,GAAG,CAACC,QAAD,EAAWC,QAAX,KAAwB;AAC/C,SAAO;AACHV,IAAAA,WAAW,EAAE,MAAM;AACf,YAAM;AAAEW,QAAAA;AAAF,UAAwBD,QAA9B;AAEAD,MAAAA,QAAQ,CAACjB,cAAc,EAAf,CAAR;AAEAmB,MAAAA,iBAAiB,CAACC,SAAlB,GACKC,IADL,CACWC,IAAD,IAAU;AACZL,QAAAA,QAAQ,CAAChB,YAAY,CAACqB,IAAD,CAAb,CAAR;AACH,OAHL,EAIKC,KAJL,CAIYC,GAAD,IAASP,QAAQ,CAACf,WAAW,CAACsB,GAAD,CAAZ,CAJ5B;AAKH,KAXE;AAYHrB,IAAAA,WAAW,EAAGsB,EAAD,IAAQR,QAAQ,CAACd,WAAW,CAACsB,EAAD,CAAZ;AAZ1B,GAAP;AAcH,CAfD;;AAiBA,eAAe9B,OAAO,CAClBE,qBAAqB,EADH,EAElBD,OAAO,CAACmB,eAAD,EAAkBC,kBAAlB,CAFW,CAAP,CAGTX,kBAHS,CAAf","sourcesContent":["import React, { Component } from 'react';\r\nimport { compose } from 'redux';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { withFructstoreService } from '../hoc'\r\nimport Spinner from '../spinner';\r\nimport ErrorIndicator from '../error-indicator';\r\n\r\nimport {\r\n    fructsRequresd,\r\n    fructsLoaded,\r\n    fructsError,\r\n    onAddToCart\r\n} from '../actions';\r\n\r\nconst FructList = ({ onAddToCart }) => {\r\n    return (\r\n        <div></div>\r\n    );\r\n};\r\n\r\nclass FructListContainer extends Component{\r\n\r\n    componentDidMount() {\r\n        this.props.fetchFructs();\r\n    }\r\n\r\n    render() {\r\n\r\n        const { fructs, loading, error, onAddToCart } = this.props\r\n\r\n        if(loading) {\r\n            return <Spinner />;\r\n        }\r\n        if(error) {\r\n            return <ErrorIndicator />;\r\n        }\r\n\r\n        console.log(this.props);\r\n\r\n        return <FructList fructs={fructs} on/>\r\n    }\r\n};\r\n\r\nconst mapStateToProps = ({ fructs, loading, error}) => {\r\n    return { fructs, loading, error }\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch, ownProps) => {\r\n    return {\r\n        fetchFructs: () => {\r\n            const { fructstoreService } = ownProps;\r\n\r\n            dispatch(fructsRequresd());\r\n\r\n            fructstoreService.getFructs()\r\n                .then((data) => {\r\n                    dispatch(fructsLoaded(data))\r\n                })\r\n                .catch((err) => dispatch(fructsError(err)));\r\n        },\r\n        onAddToCart: (id) => dispatch(onAddToCart(id)) \r\n    }\r\n}\r\n\r\nexport default compose(\r\n    withFructstoreService(),\r\n    connect(mapStateToProps, mapDispatchToProps)\r\n    )(FructListContainer);"]},"metadata":{},"sourceType":"module"}