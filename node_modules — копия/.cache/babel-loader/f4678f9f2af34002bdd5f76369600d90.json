{"ast":null,"code":"const initialState = {\n  fructs: [],\n  loading: false,\n  error: false,\n  cartElements: [],\n  orderTotal: 35\n};\n\nconst updateCartElements = (cartElements, {\n  newElement,\n  elementIndex\n}) => {\n  if (newElement.count === 0) {\n    return [...cartElements.slice(0, elementIndex), ...cartElements.slice(elementIndex + 1)];\n  }\n\n  if (elementIndex === -1) {\n    return [...cartElements, newElement];\n  }\n\n  ;\n  return [...cartElements.slice(0, elementIndex), newElement, ...cartElements.slice(elementIndex + 1)];\n}; // const ElementDefault = (fruct, element = {}, { discount, count, total }) => {\n//     const {\n//         id = fruct.id,\n//         title = fruct.title,\n//         discount = true,\n//         count = 3,\n//         total = 25 } = element;\n//     return {\n//         id,\n//         title,\n//         discount,\n//         count,\n//         total\n//     };\n// }\n\n\nconst isDiscountElement = (elementId, {\n  cartElements,\n  fructs\n}) => {\n  const fruct = fructs.find(fruct => fruct.id === elementId);\n  const elementIndex = cartElements.findIndex(({\n    id\n  }) => id === elementId);\n  const element = cartElements[elementIndex];\n  console.log(elementId, fructs, fruct);\n\n  const ElementDefault = (fruct, element = {}) => {\n    const {\n      id = fruct.id,\n      title = fruct.title,\n      discount = fruct.discount,\n      count = 0,\n      total = 0\n    } = element;\n    return {\n      id,\n      title,\n      discount,\n      count,\n      total\n    };\n  };\n\n  if (elementIndex === -1 || elementIndex >= 0) {\n    // console.log('discount false');\n    const {\n      id,\n      title,\n      discount\n    } = ElementDefault(fruct, element);\n    return {\n      id,\n      title,\n      discount,\n      count: 1,\n      total: 1\n    };\n  } else if (element.discount === true && element.count >= 3) {\n    // console.log('discount true');\n    const {\n      id,\n      title,\n      discount\n    } = ElementDefault(fruct, element);\n    return {\n      id,\n      title,\n      discount,\n      count: 3,\n      total: 25\n    };\n  }\n};\n\nconst updateCartElement = (elementId, state, action) => {\n  const {\n    cartElements\n  } = state; // const fruct = fructs.find((fruct) => fruct.id === elementId);\n\n  const elementIndex = cartElements.findIndex(({\n    id\n  }) => id === elementId); // const element = cartElements[elementIndex];\n\n  if (action === 'FRUCT_ADDED_TO_CART' && elementIndex === -1) {\n    const {\n      id,\n      title,\n      discount,\n      count,\n      total\n    } = isDiscountElement(elementId, state);\n    return {\n      newElement: {\n        id,\n        title,\n        discount,\n        count: count,\n        total: total\n      },\n      elementIndex\n    };\n  }\n\n  if (action === 'FRUCT_ADDED_TO_CART' || 'INCREASE_FRUCT_COUNT') {\n    return {\n      newElement: {\n        id,\n        title,\n        discount,\n        count: count + 1,\n        total: total + 10\n      },\n      elementIndex\n    };\n  }\n\n  if (action === 'DECREASE_FRUCT_COUNT') {\n    return {\n      newElement: {\n        id,\n        title,\n        discount,\n        count: count - 1,\n        total: total - 10\n      },\n      elementIndex\n    };\n  }\n};\n\nconst updateOrderTotal = cartElements => {// const result = cartElements.map(({total}) => total);\n  // console.log(result);\n};\n\nconst reducers = (state = initialState, action) => {\n  switch (action.type) {\n    case 'FETCH_FRUCTS_REQUREST':\n      return { ...state,\n        fructs: [],\n        loading: true,\n        error: null\n      };\n\n    case 'FETCH_FRUCTS_SUCCESS':\n      return { ...state,\n        fructs: action.payload,\n        loading: false,\n        error: null\n      };\n\n    case 'FETCH_FRUCTS_FAILURE':\n      return { ...state,\n        fructs: [],\n        loading: false,\n        error: action.payload\n      };\n\n    case 'FRUCT_ADDED_TO_CART':\n      console.log(state.cartElements);\n      return { ...state,\n        cartElements: updateCartElements(state.cartElements, updateCartElement(action.payload, state, action.type)),\n        orderTotal: updateOrderTotal(state.cartElements)\n      };\n\n    case 'DECREASE_FRUCT_COUNT':\n      console.log(state.cartElements);\n      return { ...state,\n        cartElements: updateCartElements(state.cartElements, updateCartElement(action.payload, state, action.type))\n      };\n\n    case 'INCREASE_FRUCT_COUNT':\n      console.log(state.cartElements);\n      return { ...state,\n        cartElements: updateCartElements(state.cartElements, updateCartElement(action.payload, state, action.type))\n      };\n\n    case 'DELETE_FRUCT':\n      const {\n        cartElements\n      } = state;\n      const id = cartElements.findIndex(({\n        id\n      }) => id === action.payload);\n      return { ...state,\n        cartElements: [...cartElements.slice(0, id), ...cartElements.slice(id + 1)]\n      };\n\n    default:\n      return state;\n  }\n\n  ;\n};\n\nexport default reducers;","map":{"version":3,"sources":["C:/Users/HP/Desktop/Projects/weathe-forecast/src/reducers/reducers.js"],"names":["initialState","fructs","loading","error","cartElements","orderTotal","updateCartElements","newElement","elementIndex","count","slice","isDiscountElement","elementId","fruct","find","id","findIndex","element","console","log","ElementDefault","title","discount","total","updateCartElement","state","action","updateOrderTotal","reducers","type","payload"],"mappings":"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","sourcesContent":["const initialState = {\r\n    fructs: [],\r\n    loading: false,\r\n    error: false,\r\n    cartElements: [],\r\n    orderTotal: 35\r\n};\r\n\r\nconst updateCartElements = (cartElements, { newElement, elementIndex }) => {\r\n\r\n    if(newElement.count === 0) {\r\n        return [\r\n            ...cartElements.slice(0, elementIndex),\r\n            ...cartElements.slice(elementIndex + 1 )\r\n        ];\r\n    }\r\n    \r\n    if (elementIndex === -1) {\r\n        return [\r\n            ...cartElements,\r\n            newElement\r\n        ];\r\n    };\r\n\r\n    return [\r\n        ...cartElements.slice(0, elementIndex),\r\n        newElement,\r\n        ...cartElements.slice(elementIndex + 1 )\r\n    ];\r\n};\r\n\r\n// const ElementDefault = (fruct, element = {}, { discount, count, total }) => {\r\n//     const {\r\n//         id = fruct.id,\r\n//         title = fruct.title,\r\n//         discount = true,\r\n//         count = 3,\r\n//         total = 25 } = element;\r\n\r\n//     return {\r\n//         id,\r\n//         title,\r\n//         discount,\r\n//         count,\r\n//         total\r\n//     };\r\n// }\r\n\r\nconst isDiscountElement = (elementId, { cartElements, fructs } ) => {\r\n\r\n    const fruct = fructs.find((fruct) => fruct.id === elementId);\r\n    const elementIndex = cartElements.findIndex(({id}) => id === elementId);\r\n    const element = cartElements[elementIndex];\r\n\r\n    console.log(elementId, fructs, fruct)\r\n\r\n    const ElementDefault = (fruct, element = {}) => {\r\n        const {\r\n            id = fruct.id,\r\n            title = fruct.title,\r\n            discount = fruct.discount,\r\n            count = 0,\r\n            total = 0} = element;\r\n\r\n        return {\r\n            id,\r\n            title,\r\n            discount,\r\n            count,\r\n            total\r\n        };\r\n\r\n    }\r\n\r\n    if( elementIndex === -1 || elementIndex >= 0) {\r\n        // console.log('discount false');\r\n        const {\r\n            id,\r\n            title,\r\n            discount,\r\n        } = ElementDefault(fruct, element);\r\n\r\n        return {\r\n            id,\r\n            title,\r\n            discount,\r\n            count: 1,\r\n            total: 1\r\n        }\r\n   }else if(element.discount === true && element.count >= 3) {\r\n        // console.log('discount true');\r\n        const {\r\n            id,\r\n            title,\r\n            discount\r\n        } = ElementDefault(fruct, element);\r\n\r\n        return {\r\n            id,\r\n            title,\r\n            discount,\r\n            count: 3,\r\n            total: 25\r\n        }\r\n   }\r\n}\r\n\r\nconst updateCartElement =  (elementId, state, action) => {\r\n\r\n    const { cartElements } = state;\r\n\r\n    // const fruct = fructs.find((fruct) => fruct.id === elementId);\r\n    const elementIndex = cartElements.findIndex(({id}) => id === elementId);\r\n    // const element = cartElements[elementIndex];\r\n\r\n    if(action === 'FRUCT_ADDED_TO_CART' && elementIndex === -1 ) {\r\n        const {\r\n            id,\r\n            title,\r\n            discount,\r\n            count,\r\n            total  \r\n        } = isDiscountElement(elementId, state);\r\n\r\n        return {\r\n            newElement: {\r\n                id,\r\n                title,\r\n                discount,\r\n                count: count,\r\n                total: total  \r\n            },\r\n            elementIndex\r\n        }\r\n    }\r\n    \r\n    if(action === 'FRUCT_ADDED_TO_CART' || 'INCREASE_FRUCT_COUNT' ) {\r\n        return {\r\n            newElement: {\r\n                id,\r\n                title,\r\n                discount,\r\n                count: count + 1,\r\n                total: total + 10  \r\n            },\r\n            elementIndex\r\n        }\r\n    }\r\n\r\n    if(action === 'DECREASE_FRUCT_COUNT') {\r\n        return {\r\n            newElement: {\r\n                id,\r\n                title,\r\n                discount,\r\n                count: count - 1,\r\n                total: total - 10\r\n            },\r\n            elementIndex\r\n        }\r\n    }\r\n};\r\n\r\nconst updateOrderTotal = (cartElements) => {\r\n    // const result = cartElements.map(({total}) => total);\r\n    // console.log(result);\r\n};\r\n\r\nconst reducers = (state = initialState, action) => {\r\n\r\n\r\n    switch(action.type) {\r\n        case 'FETCH_FRUCTS_REQUREST': \r\n            return {\r\n                ...state,\r\n                fructs: [],\r\n                loading: true,\r\n                error: null\r\n            };\r\n        case 'FETCH_FRUCTS_SUCCESS': \r\n            return {\r\n                ...state,\r\n                fructs: action.payload,\r\n                loading: false,\r\n                error: null\r\n            };\r\n        case 'FETCH_FRUCTS_FAILURE': \r\n            return {\r\n                ...state,\r\n                fructs: [],\r\n                loading: false,\r\n                error: action.payload\r\n            };\r\n        case 'FRUCT_ADDED_TO_CART': \r\n\r\n            console.log(state.cartElements)\r\n\r\n            return {\r\n                ...state,\r\n                cartElements: updateCartElements( state.cartElements, updateCartElement(action.payload, state, action.type) ),\r\n                orderTotal: updateOrderTotal(state.cartElements)\r\n            }\r\n        case 'DECREASE_FRUCT_COUNT': \r\n\r\n            console.log(state.cartElements)\r\n\r\n            return {\r\n                ...state,\r\n                cartElements: updateCartElements( state.cartElements, updateCartElement(action.payload, state, action.type) )\r\n            }\r\n        case 'INCREASE_FRUCT_COUNT': \r\n\r\n            console.log(state.cartElements)\r\n\r\n            return {\r\n                ...state,\r\n                cartElements: updateCartElements( state.cartElements, updateCartElement(action.payload, state, action.type) )\r\n            }\r\n        case 'DELETE_FRUCT' :\r\n\r\n            const { cartElements } = state;\r\n\r\n            const id  = cartElements.findIndex(({ id }) => id === action.payload );\r\n\r\n            return {\r\n                ...state,\r\n                cartElements: [\r\n                    ...cartElements.slice(0, id),\r\n                    ...cartElements.slice(id + 1)\r\n                ]\r\n            };\r\n\r\n        default: \r\n            return state;\r\n    };\r\n};\r\n\r\nexport default reducers;"]},"metadata":{},"sourceType":"module"}