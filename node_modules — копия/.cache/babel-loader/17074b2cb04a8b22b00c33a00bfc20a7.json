{"ast":null,"code":"const initialState = {\n  fructs: [],\n  loading: false,\n  error: false,\n  cartElements: [],\n  orderTotal: 35\n};\n\nconst updateCartElements = (cartElements, {\n  newElement,\n  elementIndex\n}) => {\n  if (newElement.count == 0) {\n    return [...cartElements.slice(0, elementIndex), ...cartElements.slice(elementIndex + 1)];\n  }\n\n  if (elementIndex == -1) {\n    return [...cartElements, newElement];\n  }\n\n  ;\n  return [...cartElements.slice(0, elementIndex), newElement, ...cartElements.slice(elementIndex + 1)];\n}; // const updateCartElement = (elementId, state, action) => {\n//     const { fructs, cartElements} = state;\n//     const fruct = fructs.find((fruct) => fruct.id === elementId);\n//     const elementIndex = cartElements.findIndex(({id}) => id === elementId);\n//     const element = cartElements[elementIndex];\n//     const ElementDefault = (fruct, element = {}) => {\n//         const {\n//             id = fruct.id,\n//             title = fruct.title,\n//             count = 0,\n//             total = 0 } = element;\n//         return {\n//             id,\n//             title,\n//             count,\n//             total\n//         };\n//     }\n//     const {\n//         id,\n//         title,\n//         count,\n//         total} = ElementDefault(fruct, element);\n//     if(action == 'DECREASE_FRUCT_COUNT') {\n//         return {\n//             newElement: {\n//                 id: fruct.id,\n//                 title: fruct.title,\n//                 count: count - 1,\n//                 total: total - fruct.price\n//             },\n//             elementIndex\n//         }\n//     }else if(action == 'FRUCT_ADDED_TO_CART' || 'INCREASE_FRUCT_COUNT') {\n//         return {\n//             newElement: {\n//                 id,\n//                 title,\n//                 count: count + 1,\n//                 total: total + fruct.price    \n//             },\n//             elementIndex\n//         }\n//     }\n// };\n\n\nconst updateCartElement = (elementId, state, action) => {\n  const {\n    fructs,\n    cartElements\n  } = state;\n  const fruct = fructs.find(fruct => fruct.id === elementId);\n  const elementIndex = cartElements.findIndex(({\n    id\n  }) => id === elementId);\n  const element = cartElements[elementIndex];\n\n  if (elementId !== 3) {\n    const ElementDefault = (fruct, element = {}) => {\n      const {\n        id = fruct.id,\n        title = fruct.title,\n        count = 0,\n        total = 0\n      } = element;\n      return {\n        id,\n        title,\n        count,\n        total\n      };\n    };\n\n    const {\n      id,\n      title,\n      count,\n      total\n    } = ElementDefault(fruct, element);\n\n    if (action == 'DECREASE_FRUCT_COUNT') {\n      return {\n        newElement: {\n          id: fruct.id,\n          title: fruct.title,\n          count: count - 1,\n          total: total - fruct.price\n        },\n        elementIndex\n      };\n    } else if (action == 'FRUCT_ADDED_TO_CART' || 'INCREASE_FRUCT_COUNT') {\n      return {\n        newElement: {\n          id,\n          title,\n          count: count + 1,\n          total: total + fruct.price\n        },\n        elementIndex\n      };\n    }\n  }\n};\n\nconst updateСartElementDiscount = (elementId, state) => {\n  const {\n    fructs,\n    cartElements\n  } = state;\n  const fruct = fructs.find(fruct => fruct.id === elementId);\n  const elementIndex = cartElements.findIndex(({\n    id\n  }) => id === elementId);\n  const element = cartElements[elementIndex];\n\n  const ElementDefault = (fruct, element = {}) => {\n    const {\n      id = fruct.id,\n      title = fruct.title,\n      count = 1,\n      total = 10\n    } = element;\n    return {\n      id,\n      title,\n      count,\n      total\n    };\n  }; // const {\n  //     id,\n  //     title,\n  //     count,\n  //     total} = ElementDefault(fruct, element);\n  // const obj = {\n  //     newElement: {\n  //         id,\n  //         title,\n  //         count,\n  //         total\n  //     },\n  //     elementIndex\n  // }\n\n\n  console.log(obj);\n\n  if (count === 3) {\n    return {\n      newElement: {\n        id: id,\n        title: title,\n        count: count,\n        total: 25\n      },\n      elementIndex\n    };\n  } else if (count > 3) {\n    return {\n      newElement: {\n        id: fruct.id,\n        title: fruct.title,\n        count: count,\n        total: total = +8\n      },\n      elementIndex\n    };\n  } // const { fructs, cartElements} = state;\n  // const fruct = fructs.find((fruct) => fruct.id === elementId);\n  // const elementIndex = cartElements.findIndex(({id}) => id === elementId);\n  // const element = cartElements[elementIndex];\n  // const ElementDefault = (fruct, element = {}) => {\n  //     const {\n  //         id = fruct.id,\n  //         title = fruct.title,\n  //         count = 0,\n  //         total = 0 } = element;\n  //     return {\n  //         id,\n  //         title,\n  //         count,\n  //         total\n  //     };\n  // }\n  // const {\n  //     id,\n  //     title,\n  //     count,\n  //     total} = ElementDefault(fruct, element);\n  // if(action == 'DECREASE_FRUCT_COUNT') {\n  //     return {\n  //         newElement: {\n  //             id: fruct.id,\n  //             title: fruct.title,\n  //             count: count - 1,\n  //             total: total - fruct.price\n  //         },\n  //         elementIndex\n  //     }\n  // }else if(action == 'FRUCT_ADDED_TO_CART' || 'INCREASE_FRUCT_COUNT') {\n  //     return {\n  //         newElement: {\n  //             id,\n  //             title,\n  //             count: count + 1,\n  //             total: total + fruct.price    \n  //         },\n  //         elementIndex\n  //     }\n  // }\n\n};\n\nconst reducers = (state = initialState, action) => {\n  switch (action.type) {\n    case 'FETCH_FRUCTS_REQUREST':\n      return { ...state,\n        fructs: [],\n        loading: true,\n        error: null\n      };\n\n    case 'FETCH_FRUCTS_SUCCESS':\n      return { ...state,\n        fructs: action.payload,\n        loading: false,\n        error: null\n      };\n\n    case 'FETCH_FRUCTS_FAILURE':\n      return { ...state,\n        fructs: [],\n        loading: false,\n        error: action.payload\n      };\n\n    case 'FRUCT_ADDED_TO_CART':\n      return { ...state,\n        cartElements: updateCartElements(state.cartElements, updateCartElement(action.payload, state, action.type))\n      };\n    // if(action.payload !== 3) {\n    //     return {\n    //         ...state,\n    //         cartElements: updateCartElements( state.cartElements, updateCartElement(action.payload, state, action.type) )\n    //     }\n    // } \n    // if(action.payload === 3) {\n    //     return {\n    //         ...state,\n    //         cartElements: updateCartElements( state.cartElements, updateCartElement(action.payload, state, action.type) )\n    //     }\n    // }\n\n    default:\n      return state;\n  }\n\n  ;\n};\n\nexport default reducers;","map":{"version":3,"sources":["C:/Users/HP/Desktop/Projects/weathe-forecast/src/reducers/reducers.js"],"names":["initialState","fructs","loading","error","cartElements","orderTotal","updateCartElements","newElement","elementIndex","count","slice","updateCartElement","elementId","state","action","fruct","find","id","findIndex","element","ElementDefault","title","total","price","updateСartElementDiscount","console","log","obj","reducers","type","payload"],"mappings":"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","sourcesContent":["const initialState = {\r\n    fructs: [],\r\n    loading: false,\r\n    error: false,\r\n    cartElements: [],\r\n    orderTotal: 35\r\n};\r\n\r\nconst updateCartElements = (cartElements, { newElement, elementIndex }) => {\r\n\r\n    if(newElement.count == 0) {\r\n        return [\r\n            ...cartElements.slice(0, elementIndex),\r\n            ...cartElements.slice(elementIndex + 1 )\r\n        ];\r\n    }\r\n    \r\n    if (elementIndex == -1) {\r\n        return [\r\n            ...cartElements,\r\n            newElement\r\n        ];\r\n    };\r\n\r\n    return [\r\n        ...cartElements.slice(0, elementIndex),\r\n        newElement,\r\n        ...cartElements.slice(elementIndex + 1 )\r\n    ];\r\n};\r\n\r\n// const updateCartElement = (elementId, state, action) => {\r\n\r\n//     const { fructs, cartElements} = state;\r\n\r\n//     const fruct = fructs.find((fruct) => fruct.id === elementId);\r\n//     const elementIndex = cartElements.findIndex(({id}) => id === elementId);\r\n//     const element = cartElements[elementIndex];\r\n\r\n//     const ElementDefault = (fruct, element = {}) => {\r\n//         const {\r\n//             id = fruct.id,\r\n//             title = fruct.title,\r\n//             count = 0,\r\n//             total = 0 } = element;\r\n\r\n//         return {\r\n//             id,\r\n//             title,\r\n//             count,\r\n//             total\r\n//         };\r\n//     }\r\n\r\n//     const {\r\n//         id,\r\n//         title,\r\n//         count,\r\n//         total} = ElementDefault(fruct, element);\r\n\r\n//     if(action == 'DECREASE_FRUCT_COUNT') {\r\n//         return {\r\n//             newElement: {\r\n//                 id: fruct.id,\r\n//                 title: fruct.title,\r\n//                 count: count - 1,\r\n//                 total: total - fruct.price\r\n//             },\r\n//             elementIndex\r\n//         }\r\n        \r\n//     }else if(action == 'FRUCT_ADDED_TO_CART' || 'INCREASE_FRUCT_COUNT') {\r\n//         return {\r\n//             newElement: {\r\n//                 id,\r\n//                 title,\r\n//                 count: count + 1,\r\n//                 total: total + fruct.price    \r\n//             },\r\n//             elementIndex\r\n//         }\r\n//     }\r\n// };\r\n\r\nconst updateCartElement = (elementId, state, action) => {\r\n\r\n    const { fructs, cartElements} = state;\r\n\r\n    const fruct = fructs.find((fruct) => fruct.id === elementId);\r\n    const elementIndex = cartElements.findIndex(({id}) => id === elementId);\r\n    const element = cartElements[elementIndex];\r\n\r\n    if(elementId !== 3) {\r\n    const ElementDefault = (fruct, element = {}) => {\r\n        const {\r\n            id = fruct.id,\r\n            title = fruct.title,\r\n            count = 0,\r\n            total = 0 } = element;\r\n\r\n            return {\r\n                id,\r\n                title,\r\n                count,\r\n                total\r\n            };\r\n        }\r\n\r\n        const {\r\n            id,\r\n            title,\r\n            count,\r\n            total} = ElementDefault(fruct, element);\r\n\r\n        if(action == 'DECREASE_FRUCT_COUNT') {\r\n            return {\r\n                newElement: {\r\n                    id: fruct.id,\r\n                    title: fruct.title,\r\n                    count: count - 1,\r\n                    total: total - fruct.price\r\n                },\r\n                elementIndex\r\n            }\r\n            \r\n        }else if(action == 'FRUCT_ADDED_TO_CART' || 'INCREASE_FRUCT_COUNT') {\r\n            return {\r\n                newElement: {\r\n                    id,\r\n                    title,\r\n                    count: count + 1,\r\n                    total: total + fruct.price    \r\n                },\r\n                elementIndex\r\n            }\r\n        }\r\n    }\r\n\r\n    \r\n};\r\n\r\nconst updateСartElementDiscount = (elementId, state) => {\r\n\r\n    const { fructs, cartElements} = state;\r\n\r\n    const fruct = fructs.find((fruct) => fruct.id === elementId);\r\n    const elementIndex = cartElements.findIndex(({id}) => id === elementId);\r\n    const element = cartElements[elementIndex];\r\n\r\n    const ElementDefault = (fruct, element = {}) => {\r\n        const {\r\n            id = fruct.id,\r\n            title = fruct.title,\r\n            count = 1,\r\n            total = 10 } = element;\r\n\r\n        return {\r\n            id,\r\n            title,\r\n            count,\r\n            total\r\n        };\r\n    }\r\n\r\n    // const {\r\n    //     id,\r\n    //     title,\r\n    //     count,\r\n    //     total} = ElementDefault(fruct, element);\r\n\r\n    // const obj = {\r\n    //     newElement: {\r\n    //         id,\r\n    //         title,\r\n    //         count,\r\n    //         total\r\n    //     },\r\n    //     elementIndex\r\n    // }\r\n\r\n    console.log(obj)\r\n\r\n    if(count === 3) {\r\n        return {\r\n            newElement: {\r\n                id: id,\r\n                title: title,\r\n                count: count,\r\n                total: 25 \r\n            },\r\n            elementIndex\r\n        }\r\n    }else if(count > 3) {\r\n        return {\r\n            newElement: {\r\n                id: fruct.id,\r\n                title: fruct.title,\r\n                count: count,\r\n                total: total =+ 8\r\n            },\r\n            elementIndex\r\n        }\r\n    }\r\n\r\n    // const { fructs, cartElements} = state;\r\n\r\n    // const fruct = fructs.find((fruct) => fruct.id === elementId);\r\n    // const elementIndex = cartElements.findIndex(({id}) => id === elementId);\r\n    // const element = cartElements[elementIndex];\r\n\r\n    // const ElementDefault = (fruct, element = {}) => {\r\n    //     const {\r\n    //         id = fruct.id,\r\n    //         title = fruct.title,\r\n    //         count = 0,\r\n    //         total = 0 } = element;\r\n\r\n    //     return {\r\n    //         id,\r\n    //         title,\r\n    //         count,\r\n    //         total\r\n    //     };\r\n    // }\r\n\r\n    // const {\r\n    //     id,\r\n    //     title,\r\n    //     count,\r\n    //     total} = ElementDefault(fruct, element);\r\n\r\n    // if(action == 'DECREASE_FRUCT_COUNT') {\r\n    //     return {\r\n    //         newElement: {\r\n    //             id: fruct.id,\r\n    //             title: fruct.title,\r\n    //             count: count - 1,\r\n    //             total: total - fruct.price\r\n    //         },\r\n    //         elementIndex\r\n    //     }\r\n        \r\n    // }else if(action == 'FRUCT_ADDED_TO_CART' || 'INCREASE_FRUCT_COUNT') {\r\n    //     return {\r\n    //         newElement: {\r\n    //             id,\r\n    //             title,\r\n    //             count: count + 1,\r\n    //             total: total + fruct.price    \r\n    //         },\r\n    //         elementIndex\r\n    //     }\r\n    // }\r\n};\r\n\r\nconst reducers = (state = initialState, action) => {\r\n\r\n\r\n    switch(action.type) {\r\n        case 'FETCH_FRUCTS_REQUREST': \r\n            return {\r\n                ...state,\r\n                fructs: [],\r\n                loading: true,\r\n                error: null\r\n            };\r\n        case 'FETCH_FRUCTS_SUCCESS': \r\n            return {\r\n                ...state,\r\n                fructs: action.payload,\r\n                loading: false,\r\n                error: null\r\n            };\r\n        case 'FETCH_FRUCTS_FAILURE': \r\n            return {\r\n                ...state,\r\n                fructs: [],\r\n                loading: false,\r\n                error: action.payload\r\n            };\r\n        case 'FRUCT_ADDED_TO_CART': \r\n\r\n            return {\r\n                ...state,\r\n                cartElements: updateCartElements( state.cartElements, updateCartElement(action.payload, state, action.type) )\r\n            }\r\n\r\n        // if(action.payload !== 3) {\r\n        //     return {\r\n        //         ...state,\r\n        //         cartElements: updateCartElements( state.cartElements, updateCartElement(action.payload, state, action.type) )\r\n        //     }\r\n        // } \r\n        // if(action.payload === 3) {\r\n\r\n        //     return {\r\n        //         ...state,\r\n        //         cartElements: updateCartElements( state.cartElements, updateCartElement(action.payload, state, action.type) )\r\n        //     }\r\n        // }\r\n        default: \r\n            return state;\r\n    };\r\n};\r\n\r\nexport default reducers;"]},"metadata":{},"sourceType":"module"}