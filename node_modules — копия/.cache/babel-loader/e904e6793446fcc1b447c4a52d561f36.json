{"ast":null,"code":"const initialState = {\n  fructs: [],\n  loading: false,\n  error: false,\n  cartElements: [],\n  orderTotal: 35\n};\n\nconst updateCartElements = (cartElements, {\n  newElement,\n  itemIndex\n}) => {\n  if (newItem.count == 0) {\n    return [...cartItems.slice(0, itemIndex), ...cartItems.slice(itemIndex + 1)];\n  }\n\n  if (itemIndex == -1) {\n    return [...cartItems, newItem];\n  }\n\n  ;\n  return [...cartItems.slice(0, itemIndex), newItem, ...cartItems.slice(itemIndex + 1)];\n};\n\nconst updateCartElement = (elementId, state, action) => {\n  const {\n    fructs,\n    cartElements\n  } = state;\n  const fruct = fructs.find(fruct => fruct.id === elementId);\n  const elementIndex = cartElements.findIndex(({\n    id\n  }) => id === elementId);\n  const element = cartElements[elementIndex];\n\n  const ElementDefault = (fruct, element = {}) => {\n    const {\n      id = fruct.id,\n      title = fruct.title,\n      count = 0,\n      total = 0\n    } = fruct;\n    return {\n      id,\n      title,\n      count,\n      total\n    };\n  };\n\n  const {\n    id,\n    title,\n    count,\n    total\n  } = ElementDefault(fruct, element);\n\n  if (action == 'DECREASE_BOOK_COUNT') {\n    return {\n      newElement: {\n        id: fruct.id,\n        title: fruct.title,\n        count: count - 1,\n        total: total - fruct.price\n      },\n      elementIndex\n    };\n  } else if (action == 'BOOK_ADDED_TO_CART' || 'INCREASE_BOOK_COUNT') {\n    return {\n      newElement: {\n        id,\n        title,\n        count: count + 1,\n        total: total + fruct.price\n      },\n      elementIndex\n    };\n  }\n\n  ;\n};\n\nconst reducers = (state = initialState, action) => {\n  switch (action.type) {\n    case 'FETCH_FRUCTS_REQUREST':\n      return { ...state,\n        fructs: [],\n        loading: true,\n        error: null\n      };\n\n    case 'FETCH_FRUCTS_SUCCESS':\n      return { ...state,\n        fructs: action.payload,\n        loading: false,\n        error: null\n      };\n\n    case 'FETCH_FRUCTS_FAILURE':\n      return { ...state,\n        fructs: [],\n        loading: false,\n        error: action.payload\n      };\n\n    case 'FRUCT_ADDED_TO_CART':\n      return { ...state,\n        cartElements: updateCartElements(state.cartElements, updateCartElement(action.payload, state, action.type))\n      };\n\n    default:\n      return state;\n  }\n\n  ;\n};\n\nexport default reducers;","map":{"version":3,"sources":["C:/Users/HP/Desktop/Projects/weathe-forecast/src/reducers/reducers.js"],"names":["initialState","fructs","loading","error","cartElements","orderTotal","updateCartElements","newElement","itemIndex","newItem","count","cartItems","slice","updateCartElement","elementId","state","action","fruct","find","id","elementIndex","findIndex","element","ElementDefault","title","total","price","reducers","type","payload"],"mappings":"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","sourcesContent":["const initialState = {\r\n    fructs: [],\r\n    loading: false,\r\n    error: false,\r\n    cartElements: [],\r\n    orderTotal: 35\r\n};\r\n\r\nconst updateCartElements = (cartElements, { newElement, itemIndex }) => {\r\n\r\n    if(newItem.count == 0) {\r\n        return [\r\n            ...cartItems.slice(0, itemIndex),\r\n            ...cartItems.slice(itemIndex + 1 )\r\n        ];\r\n    }\r\n    \r\n    if (itemIndex == -1) {\r\n        return [\r\n            ...cartItems,\r\n            newItem\r\n        ];\r\n    };\r\n\r\n    return [\r\n        ...cartItems.slice(0, itemIndex),\r\n        newItem,\r\n        ...cartItems.slice(itemIndex + 1 )\r\n    ];\r\n};\r\n\r\nconst updateCartElement = (elementId, state, action) => {\r\n\r\n    const { fructs, cartElements} = state;\r\n\r\n    const fruct = fructs.find((fruct) => fruct.id === elementId);\r\n    const elementIndex = cartElements.findIndex(({id}) => id === elementId);\r\n    const element = cartElements[elementIndex];\r\n\r\n    const ElementDefault = (fruct, element = {}) => {\r\n        const {\r\n            id = fruct.id,\r\n            title = fruct.title,\r\n            count = 0,\r\n            total = 0 } = fruct;\r\n\r\n        return {\r\n            id,\r\n            title,\r\n            count,\r\n            total\r\n        };\r\n    }\r\n\r\n    const {\r\n        id,\r\n        title,\r\n        count,\r\n        total} = ElementDefault(fruct, element);\r\n\r\n    if(action == 'DECREASE_BOOK_COUNT') {\r\n        return {\r\n            newElement: {\r\n                id: fruct.id,\r\n                title: fruct.title,\r\n                count: count - 1,\r\n                total: total - fruct.price\r\n            },\r\n            elementIndex\r\n        }\r\n        \r\n    }else if(action == 'BOOK_ADDED_TO_CART' || 'INCREASE_BOOK_COUNT') {\r\n        return {\r\n            newElement: {\r\n                id,\r\n                title,\r\n                count: count + 1,\r\n                total: total + fruct.price    \r\n            },\r\n            elementIndex\r\n        }\r\n    };\r\n};\r\n\r\nconst reducers = (state = initialState, action) => {\r\n\r\n\r\n    switch(action.type) {\r\n        case 'FETCH_FRUCTS_REQUREST': \r\n            return {\r\n                ...state,\r\n                fructs: [],\r\n                loading: true,\r\n                error: null\r\n            };\r\n        case 'FETCH_FRUCTS_SUCCESS': \r\n            return {\r\n                ...state,\r\n                fructs: action.payload,\r\n                loading: false,\r\n                error: null\r\n            };\r\n        case 'FETCH_FRUCTS_FAILURE': \r\n            return {\r\n                ...state,\r\n                fructs: [],\r\n                loading: false,\r\n                error: action.payload\r\n            };\r\n        case 'FRUCT_ADDED_TO_CART': \r\n            return {\r\n                ...state,\r\n                cartElements: updateCartElements( state.cartElements, updateCartElement(action.payload, state, action.type) )\r\n            }\r\n        default: \r\n            return state;\r\n    };\r\n};\r\n\r\nexport default reducers;"]},"metadata":{},"sourceType":"module"}